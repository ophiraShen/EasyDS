{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：动态规划解决问题的基本步骤\n学生回答：1) 定义状态 2) 建立状态转移方程 3) 确定边界条件 4) 选择计算顺序 5) 空间优化"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生已系统掌握方法论，需提升实战能力：\n1. 设计股票买卖问题的状态机模型\n2. 在字符串编辑距离问题中对比不同空间优化策略\n3. 讨论马尔可夫决策过程与DP的关系\n通过复杂案例培养建模能力"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释二分查找算法的基本原理。\n学生回答：二分查找是通过将查找范围一分为二，每次选择中间的数与目标数比较，然后决定继续向左还是向右查找。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个算法教师。学生理解了二分查找的基本原理，但缺少对复杂度分析及实现方式的理解。\n    请引导学生思考：\n1. 二分查找的时间复杂度是多少？如何证明？\n2. 二分查找必须是有序数组才能使用吗？\n3. 二分查找的递归实现和迭代实现有什么区别？\n通过问题引导学生深入理解复杂度分析和不同实现方式。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释什么是哈希表？哈希表如何处理冲突？\n学生回答：哈希表是一种通过哈希函数将键映射到数组索引的数据结构。哈希表处理冲突的常见方法有链表法和开放地址法。链表法是在数组的同一位置用链表存储多个元素，开放地址法则是通过探测空位置来存储冲突的元素。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生已经理解了哈希表的基本概念及冲突处理方法，但未涉及哈希函数的设计和负载因子。\n请引导学生思考：\n1. 哈希函数如何设计才能避免冲突？\n2. 哈希表的负载因子是什么？如何影响哈希表的性能？\n3. 哈希表的空间复杂度是多少？如何优化哈希表的存储？\n通过问题引导学生深入思考哈希表的设计、优化及性能分析。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释堆栈和队列的区别\n学生回答：堆栈是后进先出（LIFO）的数据结构，队列是先进先出（FIFO）的数据结构。"}, {"role": "assistant", "content": "对的，你已经掌握了堆栈和队列的基本定义。你能举一些实际例子来说明它们的使用吗？"}, {"role": "user", "content": "堆栈可以用在函数调用栈上，而队列适用于任务调度系统。"}, {"role": "assistant", "content": "很棒！你已经很清楚这两者的应用场景了。接下来，可以尝试学习一些更复杂的数据结构，比如优先队列或双端队列，它们在实际问题中有很多有趣的应用。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生已经完全掌握了堆栈和队列的基本概念及应用场景。\n请鼓励学生继续学习：\n1. 优先队列与双端队列的区别和使用场景\n2. 如何通过这些结构优化任务调度或数据流管理\n引导学生拓宽思路，探索更多的数据结构。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释平衡二叉树的概念\n学生回答：平衡二叉树是一种左右子树高度差不超过1的二叉树"}, {"role": "assistant", "content": "不错！平衡二叉树的定义已经掌握了。你知道有哪些常见的平衡二叉树类型吗？"}, {"role": "user", "content": "常见的有AVL树和红黑树"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生已经了解了平衡二叉树的基本概念，并知道AVL树和红黑树的区别，但可能对它们的具体实现和选择不了解。\n请引导学生思考：\n1. AVL树和红黑树在平衡性和性能上的差异\n2. 如何在不同的应用场景中选择使用不同类型的平衡二叉树\n通过启发式提问，帮助学生深入理解平衡二叉树的实际应用及其性能优势。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释哈希表的基本原理。\n学生回答：哈希表是一种通过哈希函数将键映射到数组索引的查找结构。每个键都有一个唯一的哈希值，这个哈希值决定了数据在数组中的位置。当哈希值冲突时，可以使用开放地址法或链表法解决冲突。哈希表的查找、插入和删除操作平均时间复杂度为O(1)，但最坏情况下可能退化为O(n)。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生已经掌握了哈希表的基本原理，并且了解了冲突解决方法。\n    请引导学生思考：\n1. 如何设计一个高效的哈希函数？\n2. 哈希表如何处理负载因子和扩展？\n3. 哈希表与其他数据结构（如平衡二叉树）相比，何时更适合使用？\n通过问题引导学生深入思考哈希表的优化和设计。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：链表和数组有什么区别？\n学生回答：链表是动态的，不需要连续的内存空间，而数组需要连续的内存空间。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个专业的数据结构教师。学生对链表和数组的区别有基本认识，但未提及时间复杂度和适用场景。请引导学生进一步探讨：1. 链表和数组在插入、删除、查找操作上的时间复杂度分别是多少？2. 在实际编程中，何时使用链表，何时使用数组？用引导性问题帮助学生更全面地理解这两种数据结构。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释二叉搜索树的插入操作。\n学生回答：二叉搜索树的插入操作是将新节点放在合适的位置，比根节点小的放左边，大的放右边。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个专业的数据结构教师。学生理解了二叉搜索树的基本插入规则，但尚未深入探讨递归过程和特殊情况。\n    请重点引导学生思考：\n1. 插入操作如何通过递归实现？\n2. 边界条件（如空树）如何处理？\n3. 插入操作对树平衡性的影响。\n保持鼓励性语气，通过启发式提问深化理解。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：红黑树需要满足哪些性质？\n学生回答：1) 节点为红或黑 2) 根节点黑 3) 叶节点(NIL)黑 4) 红节点子节点必黑 5) 任意节点到叶子的路径包含相同数量黑节点"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生完整掌握核心性质，需深入原理：\n1. 为什么这些性质能保证log(n)高度？\n2. 对比与B树的结构等价性\n3. 在Linux内核调度中的应用实例\n引导进行数学证明与系统级应用思考"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释二叉树的遍历方式\n学生回答：二叉树的遍历方式有前序遍历、中序遍历和后序遍历"}, {"role": "assistant", "content": "对，已经掌握了三种遍历方式。你能理解它们的区别吗？比如它们在不同的应用中有什么具体用途？"}, {"role": "user", "content": "前序遍历用在表达式树中，中序遍历用于排序，后序遍历在树的删除操作中有用"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生掌握了二叉树的三种基本遍历方式，并了解它们的应用，但可能还不清楚如何在实际问题中选择合适的遍历方式。\n请引导学生思考：\n1. 各种遍历方法在特定问题中的效率对比\n2. 如何根据实际需求选择合适的遍历方式\n通过启发式问题，帮助学生理解遍历的背后原理及优化策略。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：如何计算二叉树的最大深度？\n学生回答：递归计算左右子树深度取最大值再加1"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生掌握递归解法，需扩展方法：\n1. 要求用层次遍历实现\n2. 讨论树倾斜时的效率问题\n3. 演示尾递归优化可能性\n引导从多角度解决问题"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：如何实现最小栈？\n学生回答：用两个栈，一个存数据，另一个存当前最小值"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生知晓基础方案，但缺乏优化意识：\n1. 演示[3,2,1,1,4]的入栈过程\n2. 引导发现重复最小值的存储浪费\n3. 推导均摊时间复杂度\n通过分步推演揭示优化空间。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：如何解决0-1背包问题？\n学生回答：用二维数组dp[i][w]表示前i个物品重量w的最大价值"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生掌握基础DP实现，需提升：\n1. 推导空间复杂度优化方案\n2. 讨论分数背包的区别\n3. 分析物品重量分布对算法选择的影响\n引导工程优化思维"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释什么是队列？队列有哪些常见操作？\n学生回答：队列是一种先进先出（FIFO）的数据结构，元素从队尾插入，从队头删除。队列的常见操作有enqueue（入队）和dequeue（出队）。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生理解了队列的基本概念和操作，但未涉及队列的应用和变种。\n请引导学生思考：\n1. 队列的应用有哪些？例如任务调度、打印队列等。\n2. 队列有哪些常见的变种？例如双端队列（Deque）和优先队列。\n3. 队列的时间复杂度是多少？如何进行优化？\n通过问题引导学生深入理解队列的应用及其变种。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：什么是二叉树？二叉树有什么特点？\n学生回答：二叉树是一种每个节点最多有两个子节点的树形数据结构。二叉树的特点是每个节点最多有两个子树，通常称为左子树和右子树。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生已经理解了二叉树的基本结构和特点，但未涉及应用和遍历方式。\n请引导学生思考：\n1. 二叉树的应用有哪些？例如表达式树、二叉查找树等。\n2. 二叉树有哪些常见的遍历方式？例如前序遍历、中序遍历、后序遍历。\n3. 在实际应用中，如何选择适合的遍历方式？\n通过问题引导学生理解二叉树的应用和遍历方式。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：解释动态规划中的重叠子问题\n学生回答：相同子问题被重复计算，需要存储结果"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生理解基本概念但应用不足：\n1. 对比斐波那契与背包问题的差异\n2. 设计不具备重叠子问题的反例\n3. 讨论自顶向下与自底向上的选择\n通过反证法深化理解"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：哈希表如何处理冲突？\n学生回答：可以用链表把相同哈希值的元素串起来"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n作为数据结构导师，学生仅知链地址法，需拓展认知：\n1. 设计场景比较不同冲突解决方案\n2. 演示线性探测的具体过程\n3. 讨论哈希函数设计的双重影响\n使用对比分析法揭示技术选型逻辑。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释堆栈和队列的区别\n学生回答：堆栈和队列的主要区别在于堆栈是先进先出，而队列是后进先出"}, {"role": "assistant", "content": "这部分刚好是相反的，堆栈是后进先出，队列是先进先出。你能理解它们的实际应用场景吗？"}, {"role": "user", "content": "哦，明白了，堆栈应该用在任务队列中，队列应该用在数据处理任务上"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生对堆栈和队列的基本概念有误解，交换了它们的应用场景。\n请引导学生思考：\n1. 堆栈和队列的实际应用例子（如任务管理、数据流处理等）\n2. 如何更好地理解“先进先出”和“后进先出”的操作顺序\n通过启发式提问，帮助学生纠正对堆栈和队列应用场景的理解。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：实现LRU缓存时需要哪些数据结构？\n学生回答：哈希表加快查找，双向链表维护访问顺序"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生掌握基础实现，需关注工程细节：\n1. 为什么需要虚拟节点？\n2. 高并发场景会产生什么问题？\n3. 如何扩展为LFU实现？\n提出开放性问题引导架构思维。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：什么是二叉树的中序遍历？\n学生回答：中序遍历就是先遍历左子树，然后访问根节点，最后遍历右子树。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个经验丰富的数据结构教师。学生对中序遍历的概念有基本了解，但未提及具体实现和应用。请引导学生进一步思考：1. 中序遍历的具体代码实现是怎样的？2. 中序遍历在哪些场景下有实际应用？保持耐心，通过提问帮助学生深入理解中序遍历。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：二叉树的层序遍历如何实现？\n学生回答：用队列先把根节点放进去，然后循环取出节点并记录值，同时把左右子节点入队"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n作为数据结构指导者，学生理解队列的基础应用，但实现细节需完善：\n1. 抛出具体边界案例（如左子树为空）\n2. 要求绘制入队出队流程图\n3. 比较DFS与BFS的空间复杂度差异\n请通过错例分析引导完善代码。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：什么是深度优先搜索（DFS）？\n学生回答：深度优先搜索是一种从根节点开始，沿着路径深入到不能再深入为止，然后回溯的搜索算法。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个经验丰富的数据结构教师。学生对深度优先搜索的概念有基本了解，但未提及具体实现和应用场景。请引导学生进一步思考：1. 深度优先搜索的代码实现是怎样的？2. 深度优先搜索在哪些实际问题中有应用？用启发式问题帮助学生深入理解深度优先搜索。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：红黑树与AVL树的区别\n学生回答：两者都是平衡二叉树，红黑树通过颜色属性保持平衡"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生混淆不同平衡策略：\n1. 对比连续插入场景的旋转次数\n2. 可视化展示两者的高度差限制\n3. 分析磁盘存储场景下的选择依据\n使用对比表格澄清核心差异。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：迪杰斯特拉算法的适用条件\n学生回答：用于有向无环图的最短路径查找"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生存在根本性误解：\n1. 构造含负权重的反例演示失败案例\n2. 对比贝尔曼-福特算法适用场景\n3. 手写模拟算法执行过程\n通过证伪法重建认知体系。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释二叉树的遍历方式\n学生回答：二叉树有前序遍历、中序遍历和后序遍历，分别是根-左-右、左-根-右、左-右-根。"}, {"role": "assistant", "content": "完全正确！你清晰地解释了三种遍历方式。你也了解它们在实际应用中的作用吗？"}, {"role": "user", "content": "前序遍历常用于树的复制，中序遍历可以得到一个排序好的数组，后序遍历用于删除树中的节点。"}, {"role": "assistant", "content": "太棒了！你已经掌握了遍历的应用。可以继续学习树的高级应用，比如AVL树、红黑树的平衡策略，或者如何通过遍历实现一些复杂的树操作。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生已经完全理解了二叉树的遍历方式，并能够准确应用这些遍历方法。\n请鼓励学生继续学习：\n1. 自平衡二叉树（如AVL树和红黑树）的特性和应用\n2. 如何使用遍历实现树的复杂操作（如插入、删除）\n引导学生进一步深化对树结构的理解，挑战更复杂的应用。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释二分查找算法的基本原理。\n学生回答：二分查找是一种在有序数组中查找元素的算法。算法每次通过比较中间元素与目标元素的大小，将查找区间一分为二，从而减少查找的范围。每次比较后，只需要继续查找剩余的一半，直到找到目标元素或查找区间为空。二分查找的时间复杂度是O(log n)，适用于有序数组。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个算法专家。学生已经理解了二分查找的基本原理，并且掌握了时间复杂度分析。\n    请引导学生思考：\n1. 如何证明二分查找的时间复杂度是O(log n)？\n2. 二分查找是否能在无序数组中使用？为什么？\n3. 除了二分查找，是否有其他更高效的查找算法？\n通过问题引导学生思考二分查找的适用场景及其他查找算法的比较。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请描述什么是动态规划（DP）。\n学生回答：动态规划是通过将大问题分解成小问题，解决小问题后再组合起来得到最终答案。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个动态规划专家。学生理解了动态规划的基本思想，但未涉及状态转移方程和复杂度分析。\n    请引导学生思考：\n1. 如何推导动态规划的状态转移方程？\n2. 动态规划的时间复杂度如何分析？可以进行优化吗？\n3. 动态规划和贪心算法有什么区别？\n通过问题帮助学生理解状态转移方程及算法复杂度。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请说明堆栈的工作原理。\n学生回答：堆栈是一种先进后出的数据结构，只能在一端进行插入和删除操作。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个专业的数据结构教师。学生清楚地阐述了堆栈的基本工作原理，但未涉及潜在问题和实际应用。\n    请引导学生思考：\n1. 堆栈溢出是如何发生的？如何避免？\n2. 堆栈在哪些场景中被广泛应用？\n3. 堆栈与队列的主要区别是什么？\n通过开放性问题激发学生的兴趣。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释图的最短路径算法Dijkstra的基本原理。\n学生回答：Dijkstra算法通过不断选择最短的边，逐步扩展到所有节点，找到最短路径。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个图算法教师。学生理解了Dijkstra算法的基本过程，但缺少对算法复杂度、边权处理的理解。\n    请引导学生思考：\n1. Dijkstra算法的时间复杂度是多少？如何优化？\n2. Dijkstra算法如何处理边权为负的情况？\n3. Dijkstra与Bellman-Ford算法有何区别？\n通过问题帮助学生理解算法优化及复杂度分析。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释堆排序的工作原理。\n学生回答：堆排序是先建立一个堆，然后将堆顶元素与末尾元素交换，再重新调整堆。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个排序算法教师。学生理解了堆排序的基本步骤，但缺少对堆构建、时间复杂度和稳定性的理解。\n    请引导学生思考：\n1. 如何构建堆？堆是如何通过调整满足堆的性质的？\n2. 堆排序的时间复杂度是什么？在不同情况下如何分析？\n3. 堆排序是否稳定？为什么？\n通过提问帮助学生理解堆排序的细节和性能分析。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：什么是栈？请简单描述栈的特点。\n学生回答：栈是一种后进先出（LIFO）的数据结构，只有栈顶的元素可以被访问。栈有两个主要操作：push（压入元素）和pop（弹出元素）。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生理解了栈的基本概念，但没有涉及栈的应用场景和复杂度。\n请引导学生思考：\n1. 栈在实际应用中有什么用途？例如函数调用、表达式求值等。\n2. 栈的空间复杂度是多少？与其他数据结构相比如何？\n3. 栈的实现方式有哪些？例如使用数组还是链表？\n通过问题引导学生深入思考栈的实际应用和实现方式。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释平衡二叉树的概念\n学生回答：平衡二叉树就是左右子树节点数目差不多的二叉树"}, {"role": "assistant", "content": "你抓住了平衡二叉树的一部分概念，但实际上它的平衡标准是左右子树的高度差不超过1。你能理解这个定义吗？"}, {"role": "user", "content": "哦，原来是高度差，左右子树节点数目差不多不是重点"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生理解了平衡二叉树的概念，但将“节点数差”误解为“高度差”。\n请重点引导学生思考：\n1. 平衡二叉树的定义：高度差不超过1\n2. 如何验证一棵树是否平衡\n通过启发式问题，帮助学生纠正对平衡二叉树定义的误解，理解其高度平衡的重要性。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：Kruskal算法的实现步骤\n学生回答：按权重排序边，用并查集选择不形成环的边"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生理解流程但缺乏优化意识：\n1. 对比不同Union-Find实现的效率\n2. 可视化展示森林合并过程\n3. 推导(m log n)时间复杂度的由来\n用数学证明强化认知"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释什么是链表\n学生回答：链表是一种顺序存储的结构，类似于数组"}, {"role": "assistant", "content": "你说的顺序存储更像是数组的特点，链表实际上是通过指针将元素连接在一起。你知道链表的存储方式是什么吗？"}, {"role": "user", "content": "链表应该是元素通过数组下标连接起来的吧？"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构专家。学生对链表的概念有误解，认为它是通过数组下标连接的。\n请重点引导学生思考：\n1. 链表与数组的存储方式的区别\n2. 指针在链表中的作用和结构\n通过启发式问题，帮助学生理解链表的真实结构与存储方式。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：如何判断链表是否有环？\n学生回答：可以用两个指针，一个每次走两步，另一个走一步，如果相遇就有环"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n作为数据结构导师，学生已掌握快慢指针基础应用，需深化理解：\n1. 引导用数学归纳法证明算法正确性\n2. 设置特殊测试用例（如单节点成环）\n3. 比较其他检测方法的时间复杂度\n请用渐进式提问引导推导，保持专业且鼓励的语气。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：BFS和DFS的主要区别是什么？\n学生回答：BFS用队列实现，按层遍历；DFS用栈实现，优先深入子节点"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生已准确掌握基础概念，需提升至应用层：\n1. 设计迷宫问题比较两种算法效率\n2. 引入加权图下的扩展应用\n3. 探讨递归实现DFS的栈溢出风险\n请用工程案例引导高阶思考。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释快速排序的基本原理。\n学生回答：快速排序是选择一个基准值，然后把数组分成两部分，比基准值小的放左边，大的放右边。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个专业的数据结构教师。学生对快速排序有基本认识，理解了分区思想，但缺少对递归过程的理解。请重点引导学生思考：1. 分区后的子数组如何继续处理？2. 递归思想在快速排序中的应用？3. 不同场景下的时间复杂度分析？保持鼓励性语气，通过启发式提问深化理解。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请简要描述图的广度优先搜索算法（BFS）。\n学生回答：广度优先搜索是从一个节点开始，按层次逐层访问每个节点。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个算法教师。学生理解了BFS的基本概念，但没有提及时间复杂度和与DFS的比较。\n    请引导学生思考：\n1. BFS的时间复杂度是什么？为什么是这样？\n2. BFS与DFS的主要区别是什么？什么时候使用BFS？\n3. 队列在BFS中的具体作用是什么？\n引导学生深入理解BFS的时间复杂度和队列使用。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：拓扑排序适用于什么类型的图？\n学生回答：可以用于有向无环图进行任务排序"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n学生已掌握基础，需深入应用：\n1. 设计课程依赖关系的多解场景\n2. 关联动态规划中的状态依赖\n3. 讨论并行执行的可能性\n引导理论到实践的迁移"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释栈的数据结构及其应用。\n学生回答：栈是一种后进先出的数据结构，常用于保存函数调用信息。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生理解了栈的基本概念，但未涉及栈的其他应用和实现方式。\n    请引导学生思考：\n1. 除了函数调用，栈还有哪些实际应用？\n2. 栈是如何实现的？有哪些常见的实现方式？\n3. 栈的空间复杂度和操作复杂度如何分析？\n通过问题帮助学生理解栈的广泛应用及实现细节。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释堆栈和队列的区别\n学生回答：堆栈是一种后进先出（LIFO）的数据结构，而队列是先进先出（FIFO）的数据结构"}, {"role": "assistant", "content": "对的！你已经了解了堆栈和队列的基本特点。你能举一些实际应用中的例子吗？"}, {"role": "user", "content": "堆栈用在函数调用栈上，队列用在任务调度系统中"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生已经知道堆栈和队列的基本定义和应用场景，但可能对它们的具体实现和效率优化不了解。\n请重点引导学生思考：\n1. 堆栈和队列的常见实现方法（如数组和链表）\n2. 在不同情况下如何选择使用堆栈或队列\n通过启发式问题，引导学生深入理解两者的性能差异与应用场景。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释什么是哈希表\n学生回答：哈希表是一种通过哈希函数将数据映射到一个固定大小的数组中"}, {"role": "assistant", "content": "你对哈希表的基本原理有了很好的理解。哈希冲突是哈希表常见的问题之一，你知道如何解决哈希冲突吗？"}, {"role": "user", "content": "哈希冲突可以通过链地址法或者开放地址法解决"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生了解了哈希表的基本原理，并知道如何处理哈希冲突，但可能还不清楚哈希表的实际应用和性能优化。\n请引导学生思考：\n1. 哈希表在实际系统中的应用场景\n2. 如何选择合适的哈希函数以及解决哈希冲突的最佳策略\n通过启发式问题，引导学生深入理解哈希表的实际价值和优化技巧。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请描述链表的优点和缺点。\n学生回答：链表的优点是可以动态扩展，缺点是访问速度慢。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个专业的数据结构教师。学生初步了解了链表的优点和缺点，但未提及具体细节。\n    请引导学生思考：\n1. 链表在内存使用上的特点是什么？\n2. 插入和删除操作为何在链表中高效？\n3. 链表适合哪些应用场景？\n鼓励学生结合实际案例展开讨论。"}}
{"input": [{"role": "system", "content": "你是一个提示词生成助手。请根据问题、用户与教师智能体的对话，生成进一步的教学指导提示词。"}, {"role": "user", "content": "问题：请解释什么是二叉树的前序遍历。\n学生回答：前序遍历是先访问根节点，再访问左子树，最后访问右子树。"}], "output": {"role": "assistant", "content": "现在在采用费曼学习法，帮助用户学习数据结构知识，尽可能的引导用户思考，非必要情况下不要直接给出答案。\n你是一个数据结构教师。学生理解了前序遍历的基本过程，但缺少对递归实现和复杂度分析的了解。\n    请引导学生思考：\n1. 如何用递归实现前序遍历？\n2. 前序遍历的时间复杂度是多少？如何分析？\n3. 除了前序遍历，还有哪些常见的树的遍历方式？\n通过提问帮助学生深入理解递归实现和复杂度分析。"}}
