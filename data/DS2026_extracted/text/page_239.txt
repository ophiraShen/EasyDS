第6章图
227
DFS（或BFS）可用来计算无向图的连通分量数，因为一次遍历必然会将一个连通图中的所
有顶点都访问到，所以计算图的连通分量数正好是DFSTraverse（）中DFS被调用的次数。
04.C、A、C、A
深度优先遍历时，每个顶点表结点和每个边表结点均查找一次，每个顶点递归调用一次，
需要借助一个递归工作栈；而广度优先遍历时，也是每个顶点表结点和每个边表结点均查找一
次，需要借助一个辅助队列。因此，时间复杂度都是O(n+e)，空间复杂度都是O(n)。
05.A
在图的广度优先遍历算法中，每个顶点被访问后立即做访问标记并入队。若队列不空，则
队首顶点出队，若该顶点的邻接顶点未被访问，则访问之，做访问标记并入队；若被访问过，
则跳过，如此反复，直至队空。因此，在广度优先遍历过程中，每个顶点最多入队一次。
06.A、A
采用邻接矩阵表示时，查找一个顶点所有出边的时间复杂度为O(n)，共有n个顶点，所以
时间复杂度均为O（n²)
07.D
画出草图后，此类题可以根据边的邻接关系快速排除错误选项。以选项A为例，在遍历到
e之后，应该访问与e邻接但未被访问的结点，（e,c)显然不在边集中。
08.D
仅1和4正确。以2为例，遍历到c之后，与c邻接且未被访问的结点为空集，所以应为a
的邻接点b或e入栈。以3为例，因为遍历要按栈退回，所以是先b后c，而不能先c后b。
09.B、D
图的深度优先搜索类似于树的先根遍历，即先访问结点，再递归向外层结点遍历，都采用
回溯算法。图的广度优先搜索类似于树的层序遍历，即一层一层向外层扩展遍历，都需要采用
队列来辅助算法的实现。
10. A、B
DFS序列产生的路径为<1,2>，<2,5>，<5,4>，<3，6>；BFS序列产生的路径为<1,2>，<1,4>，
<2,5>，<3，6>。
11.D
画出V和E对应的图G，然后根据搜索算法求解。
注意
为什么本题序列是不唯一的，而上题序列却是唯一的呢？
因为上题给出了具体的存储结构，此时就必须按照算法的过程来执行，每个顶点的邻接点
的顺序已固定，但本题中每个顶点的邻接点的顺序是非固定的。
12.C
利用深度优先遍历可以判断图G中是否存在回路。
对于无向图来说，若深度优先遍历过程中遇到了回边，则必定存在环；对于有向图来说，
这条回边可能是指向深度优先森林中另一棵生成树上的顶点的弧：但是，从有向图的某个顶点v
出发进行深度优先遍历时，若在DFS(v)结束之前出现一条从顶点u到顶点v的回边，且u在生
成树上是v的子孙，则有向图必定存在包含顶点v和顶点u的环。
13.B
