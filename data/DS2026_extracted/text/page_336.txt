324
2026年数据结构考研复习指导
散列函数可能会把两个或两个以上的不同关键字映射到同一地址，称这种情况为冲突，这些
方面，因为这样的冲突总是不可避免的，所以还要设计好处理冲突的方法。
散列表（也称哈希表）：根据关键字而直接进行访问的数据结构。也就是说，散列表建立了
关键字和存储地址之间的一种直接映射关系。
理想情况下，对散列表进行查找的时间复杂度为0（1)，即与表中元素的个数无关。下面分别
介绍常用的散列函数和处理冲突的方法。
7.5.2散列函数的构造方法
在构造散列函数时，必须注意以下几点：
1）散列函数的定义域必须包含全部关键字，而值域的范围则依赖于散列表的大小。
2）散列函数计算出的地址应尽可能均匀地分布在整个地址空间，尽可能地减少冲突。
3）散列函数应尽量简单，能在较短的时间内计算出任意一个关键字对应的散列地址。
下面介绍常用的散列函数。
1.直接定址法
直接取关键字的某个线性函数值为散列地址，散列函数为
H(key)=key或H(key)=axkey +b
式中，a和b是常数。这种方法计算最简单，且不会产生冲突。它适合关键字的分布基本连续的
情况，若关键字分布不连续，空位较多，则会造成存储空间的浪费。
2.除留余数法
这是一种最简单、最常用的方法，假定散列表表长为m，取一个不大于m但最接近或等于m
的质数p，利用以下公式把关键字转换成散列地址。散列函数为
H(key) = key % p
除留余数法的关键是选好p，使得每个关键字通过该函数转换后等概率地映射到散列空间上
的任意一个地址，从而尽可能减少冲突的可能性。
3.数字分析法
设关键字是r进制数（如十进制数），而r个数码在各位上出现的频率不一定相同，可能在某
些位上分布均匀一些，每种数码出现的机会均等；而在某些位上分布不均匀，只有某几种数码经
常出现，此时应选取数码分布较为均匀的若干位作为散列地址。这种方法适合于已知的关键字集
合，若更换了关键字，则需要重新构造新的散列函数。
4.平方取中法
顾名思义，这种方法取关键字的平方值的中间几位作为散列地址。具体取多少位要视实际情
况而定。这种方法得到的散列地址与关键字的每位都有关系，因此使得散列地址分布比较均匀，
适用于关键字的每位取值都不够均匀或均小于散列地址所需的位数。
在不同的情况下，不同的散列函数具有不同的性能，因此不能笼统地说哪种散列函数最好。
在实际选择中，采用何种构造散列函数的方法取决于关键字集合的情况。
7.5.3处理冲突的方法
应该注意到，任何设计出来的散列函数都不可能绝对地避免冲突。为此，必须考虑在发生冲
突时应该如何处理，即为产生冲突的关键字寻找下一个“空”的Hash地址。用H表示处理冲突
