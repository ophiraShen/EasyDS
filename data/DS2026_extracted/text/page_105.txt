第3章栈、队列和数组
93
多重复的计算。下面以n=5为例，列出递归调用执行过程，如图3.16所示。
F(5)
E(4)
F(3)
E(3）
F(2)
F(2）
F(1）
F(1)
F(1)
F(0)
F(1)
F（O)
F（1)
F（O)
图3.16F（5）的递归执行过程
显然，在递归调用的过程中，F(3)被计算2次，F(2)被计算3次。F(1)被调用5次，F(0)
被调用3次。所以，递归的效率低下，但优点是代码简单，容易理解。在第5章的树中利用了递
归的思想，代码变得十分简单。通常情况下，初学者很难理解递归的调用过程，若读者想具体了
解递归是如何实现的，可以参阅编译原理教材中的相关内容。
可以将递归算法转换为非递归算法，通常需要借助栈来实现这种转换。
3.3.4队列在层次遍历中的应用
在信息处理中有一大类问题需要逐层或逐行处理。这类问题的解决方法往往是在处理当前层
或当前行时就对下一层或下一行做预处理，把处理顺序安排好，等到当前层或当前行处理完毕，
就可以处理下一层或下一行。使用队列是为了保存下一步的处理顺序。下面用二叉树（见图3.17）
层次遍历的例子，说明队列的应用。表3.3显示了层次遍历二叉树的过程。
B
C
D
?
?
G
图3.17
二叉树
表3.3层次遍历二叉树的过程
序
说
明
队内
队
外
1
A入
A
2
A出，BC入
BC
A
3
B出，D入
CD
AB
4
C出，EF入
DEF
ABC
5
D出，G入
EFG
ABCD
6
E出，HI入
FGHI
ABCDE
7
F出
GHI
ABCDEF
8
GHI出
ABCDEFGHI
该过程的简单描述如下：
①根结点入队。
②若队空（所有结点都已处理完毕），则结束遍历：否则重复③操作。
