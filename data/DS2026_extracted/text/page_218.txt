206
2026年数据结构考研复习指导
成，且其中之一只含一个顶点，另一个为完全图。其中只含一个顶点的子图没有边，另一个完
6.2图的存储及基本操作
图的存储必须要完整、准确地反映顶点集和边集的信息。根据不同图的结构和算法，采用不
同的存储方式将对程序的效率产生相当大的影响，因此所选的存储结构应适合于待求解的问题。
6.2.1邻接矩阵法
所谓邻接矩阵存储，是指用一个一维数组存储图中顶点的信息，用一个二维数组存储图中
边的信息（各顶点之间的邻接关系），存储顶点之间邻接关系的二维数组称为邻接矩阵。
顶点数为n的图G=(V,E)的邻接矩阵A是nxn的，将G的顶点编号为v,V2",V，则
[1,
(v,v,)或<v,v,>是E(G)中的边
A[]U]=
10,
(v,v,)或<v,v,>不是E(G)中的边
命题追踪图的邻接矩阵存储及相互转换（2011、2015、2018）
对带权图而言，若顶点v，和v之间有边相连，则邻接矩阵中对应项存放着该边对应的权
值，若顶点V和V不相连，则通常用0或∞来代表这两个顶点之间不存在边：
W'ij,
(v,v,)或<v,v>是E(G)中的边
A[]U]=
0或∞，（v,v)或<v,v>不是E(G)中的边
有向图、无向图和网对应的邻接矩阵示例如图6.5所示。
②
011
0000
000
1000
01100
(a)有向图G及其邻接矩阵
(b)无向图G及其邻接矩阵
(c)网及其邻接矩阵（对角线元素也经常用0表示）
图6.5有向图、无向图及网的邻接矩阵
命题追踪（算法题）邻接矩阵的遍历及顶点的度的计算（2021、2023）
图的邻接矩阵存储结构定义如下：
#define MaxVertexNum 100
//顶点数目的最大值
typedef char VertexType;
/顶点对应的数据类型
typedef int EdgeType;
//边对应的数据类型
typedef struct{
VertexType vex[MaxVertexNum];
//顶点表
EdgeType edge[MaxVertexNum] [MaxVertexNum];//邻接矩阵，边表
