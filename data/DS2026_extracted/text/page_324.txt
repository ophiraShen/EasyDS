312
2026年数据结构考研复习指导
点上所做的不是两路分支决定，而是根据该结点的子树所做的多路分支决定。
B树的查找包含两个基本操作：①在B树中找结点：②在结点内找关键字。B树常存储在
磁盘上，因此前一查找操作是在磁盘上进行的，而后一查找操作是在内存中进行的，即在磁盘上
找到目标结点后，先将结点信息读入内存，然后再采用顺序查找法或折半查找法。因此，在磁盘
上进行查找的次数即目标结点在B树上的层次数，决定了B树的查找效率。
在B树上查找到某个结点后，先在有序表中进行查找，若找到则查找成功，否则按照对应的
点只有一个关键字，且42>22，若存在，必在关键字22的右边子树上，右孩子结点有两个关键
字，而36<42<45，则若存在，必在36和45中间的子树上，在该子结点中查到关键字42，查
找成功）。查找到叶结点时（对应指针为空），则说明树中没有对应的关键字，查找失败。
2.B树的高度（磁盘存取次数）
由上一节得知，B树中的大部分操作所需的磁盘存取次数与B树的高度成正比。
下面来分析B树在不同情况下的高度。当然，首先应该明确B树的高度不包括最后的不带任
何信息的叶结点所处的那一层（有些书对B树的高度的定义中，包含最后的那一层）。
若n≥1，则对任意一棵包含n个关键字、高度为h、阶数为m的B树：
1）若让每个结点中的关键字个数达到最多，则容纳同样多关键字的B树的高度达到最小。
因为B树中每个结点最多有m棵子树，m-1个关键字，所以在一棵高度为h的m阶B
树中关键字的个数应满足n≤（m-1)(1+m+m²+..·+m²-)=m-1，因此有
h≥1ogm(n+1)
2）若让每个结点中的关键字个数达到最少，则容纳同样多关键字的B树的高度达到最大。
第一层至少有1个结点；第二层至少有2个结点；除根结点外的每个非叶结点至少有「m/2]
棵子树，则第三层至少有2m/2|个结点……··第h+1层至少有2（m/21）-1个结点，注意
到第h+1层是不包含任何信息的叶结点。对于关键字个数为n的B树，叶结点即查找不
成功的结点为n+1，由此有n+1≥2(「m/2])²1，即h≤log[m/2]((n+ 1)/2)+ 1。
例如，假设一棵3阶B树共有8个关键字，则其高度范围为2≤h≤3.17，取整数。
3.B树的插入
命题追踪通过插入操作构造一棵初始为空的B树（2020）
与二叉排序树的插入操作相比，B树的插入操作要复杂得多。在B树中查找到插入的位置后，
并不能简单地将其添加到终端结点（最底层的非叶结点）中，因为此时可能会导致整棵树不再满
足B树定义中的要求。将关键字key插入B树的过程如下：
1）定位。利用前述的B树查找算法，找出插入该关键字的终端结点（在B树中查找key时，
会找到表示查找失败的叶结点，因此插入位置一定是最底层的非叶结点）。
2）插入。每个非根结点的关键字个数都在[m/2｜-1，m-1]。若结点插入后的关键字个数小
于m，可以直接插入；若结点插入后的关键字个数大于m-1，必须对结点进行分裂。
分裂的方法是：取一个新结点，在插入key后的原结点，从中间位置（「m/2]）将其中的关
键字分为两部分，左部分包含的关键字放在原结点中，右部分包含的关键字放到新结点中，中间
位置（m/21）的结点插入原结点的父结点。若此时导致其父结点的关键字个数也超过了上限，则
继续进行这种分裂操作，直至这个过程传到根结点为止，进而导致B树高度增1。
对于m=3的B树，所有结点中最多有m-1=2个关键字，若某结点中已有两个关键字，则
所示，此时必须进行结点分裂，分裂的结果如图7.29（c）所示。
