第6章图
257
表，选项ⅡI错误。存在回路的有向图不存在拓扑序列，若拓扑排序输出结束后所余下的顶点都
有前驱，则说明只得到了部分顶点的拓扑有序序列，图中存在回路，选项ⅢI正确。
35．B公众号：小兔网盘免费分享无水印PDF
根据Dijkstra算法，从顶点1到其余各顶点的最短路径如下表所示。
顶点第1轮
第2轮
第3轮
第4轮
第5轮
5
5
2
V→V2
v1-V2
8
8
7
3
V→V2→V3
8
11
11
4
V→V5-
v1→V5-V4
V→V5→4
V1-→V5→V4
5
4
V→V5
8
9
9
9
6
v1-V5-V6
V1→V5-v6
V1-V5→V6
集合S
(1.5)
(1,5,2}
1,5,2.3;
1,5,2.3,6}
1,5,2,3.6,4}
快速解法。依次观察从顶点1到其他顶点的最短路径长度：顶点1到顶点2的最短路径长
度为5：顶点1到顶点3的最短路径长度为5+2=7：顶点1到顶点4的最短路径长度为11：顶
点1到顶点5的最短路径长度为4：顶点1到顶点6的最短路径长度为4+5=9：最终
dist[]={0,5，7,11,4,9}，根据dist数组值从小到大选择顶点顺序为1,5,2,3,6,4。
36.B
采用邻接表作为AOV网的存储结构进行拓扑排序，需要对n个顶点做入栈、出栈、输出各一
次，当处理e条边时，需要检测这n个顶点的边链表结点，共需要的时间为O(n+e)。若采用邻接
矩阵作为AOV网的存储结构进行拓扑排序，在处理e条边时需对每个顶点检测相应矩阵中的某
一行，寻找与它相关联的边，以便对这些顶点的入度减1，需要的时间代价为O（²)。
【补充】有两种常用的拓扑排序算法：基于BFS的算法和基于DFS的算法。本题未指明采
用哪种算法，因此只需验证一种算法即可（说明两种算法在对应条件下的时间复杂度相同）。
基于BFS的算法的思想：首先找到所有入度为O的结点，将它们加入一个队列，并将它们
某个后继结点的入度变为0，则将它也加入队列，并将它加入拓扑序列，重复这个过程。
基于DFS的算法的思想：在DFS调用过程中设定一个时间标记，当DFS调用结束时，对
各结点计时，进而按结束时间从大到小排序，可以得到一个拓扑序列。
37.D
拓扑排序每次选取入度为0的结点输出，经观察不难发现拓扑序列前两位一定是1，5或5，1
（因为只有1和5的入度均为0，且其他结点都不满足仅有1或仅有5作为前驱）。
38.C
活动d的最早开始时间等于该活动弧的起点所表示的事件的最早发生时间，活动d的最早
开始时间等于事件2的最早发生时间max{a,b+c}=max{3，12}=12。活动d的最迟开始时间等于
该活动弧的终点所表示的事件的最迟发生时间与该活动所需时间之差，先算出图中关键路径长
度为27（对于不复杂的选择题，找出所有路径计算长度），那么事件4的最迟发生时间为
min{27-g}=min{27-6}=21，活动d的最迟开始时间为21-d=21-7=14。
常规方法：按照关键路径算法算得到下表。
