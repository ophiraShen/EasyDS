374
2026年数据结构考研复习指导
for(i=1;i<k;i++)
C[i]=C[i]+C[i-1];
//C[x]保存的是小于或等于x的元素个数
for（i=n-1;i>=0;i--){
//从后往前遍历输入数组
B[C[A[i]]-1]=A[i];
//将元素A[i]放在输出数组B[]的正确位置上
C[A[i]]=C[A[i]]-1;
第一个for循环执行完后，数组c的值初始化为O。第二个for循环遍历输入数组A，若
个输入元素的值为x，则将C[x]值加1，该for循环执行完后，C[x]中保存的是等于x的元
素个数。第三个for循环通过累加计算后，C[x］中保存的是小于或等于×的元素个数。第四个
for循环从后往前遍历数组A，把每个元素A[i]放入它在输出数组B的正确位置上。若数组A
中不存在相同的元素，则C[A[i]]-1就是A[i]在数组B中的最终位置，这是因为共有C[A[i]]
个元素小于或等于A[i]。若数组A中存在相同的元素，将每个元素A[i]放入数组B[]后，都要
将C[A[i]]减1，这样，当遇到下一个等于A[i]的输入元素（若存在）时，该元素就可放在数
组B中A[i]的前一个位置上。
假设输入数组A[]={2，4,3，0，2，3}，第二个for循环执行完后，辅助数组c的情况如图8.13(a)
所示：第三个for循环执行完后，辅助数组c的情况如图8.13（b）所示。图8.13（c)至图8.13（h)分别是
第四个for循环每迭代一次后，输出数组B和辅助数组c的情况。
012345
012345
012345
012345
A2]430|213
A2|4302|3
A2]43023
A214]3|0]213
01234
012345
A3
A213
01234
01234
01234
01234
c102|21
c111356
C111346
c1246
(a)
(b)
(c)
(d)
012345
012345
012345
012345
A2|4302|3
A2|43023
A2|43023
012345
012345
B023
B0233
B02334
B022334
01234
01234
01234
01234
c01246
c01121316
c0121315
c01135
(e)
(f
(g)
(h)
图8.13计数排序的过程
由上面的过程可知，计数排序的原理是：数组的索引（下标）是递增有序的，通过将序列中
的元素作为辅助数组的索引，其个数作为值放入辅助数组，遍历辅助数组来排序。
计数排序算法的性能分析如下。
空间效率：计数排序是一种用空间换时间的做法。输出数组的长度为n；辅助的计数数组的
长度为k，空间复杂度为O(n+k)。若不把输出数组视为辅助空间，则空间复杂度为O(k)。
环所花的时间为O（n)，总时间复杂度为O（n+k)。因此，当k=O(n)时，计数排序的时间复杂度为
O(n)：但当k>O(nlog2n)时，其效率反而不如一些基于比较的排序（如快速排序、堆排序等）。
稳定性：上述代码的第4个for循环从后往前遍历输入数组，相同元素在输出数组中的相对
位置不会改变，因此计数排序是一种稳定的排序算法。
适用性：计数排序更适用于顺序存储的线性表。计数排序适用于序列中的元素是整数且元素
范围（0～k-1）不能太大，否则会造成辅助空间的浪费。
