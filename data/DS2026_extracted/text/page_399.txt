第8章排
序
387
先从前往后，再从后往前。算法的代码如下：
intPartition(ElemType K[],int n){
//交换序列K[1..n]中的记录，使枢轴到位，并返回其所在位置
int i=1,j=n;
//设置两个交替变量初值分别为1和n
ElemType pivot=K[j];
/枢轴
while(i<j)(
//循环跳出条件
while(i<j&&K[i]<=pivot)
i++;
1//从前往后找比枢轴大的元素
if(i<j)
K[j]=K[i];
//移动到右端
while(i<j&&K[j]>=pivot)
j--;
//从后往前找比枢轴小的元素
if(i<j)
K[i]=K[j];
//移动到左端
}//while
K[i]=pivot;
//枢轴存放在最终位置
returni;
//返回存放枢轴的位置
8.7外部排序
外部排序可能会考查相关概念、方法和排序过程，外部排序的算法比较复杂，不会在算法设
计上进行考查。本节的主要内容有：
①外部排序指的是大文件的排序，即待排序的记录存储在外存中，待排序的文件无法一次
性装入内存，需要在内存和外存之间进行多次数据交换，以达到排序整个文件的目的。
③利用败者树增大归并路数。
④利用置换-选择排序增大归并段长度来减少归并段个数。
③由长度不等的归并段进行多路平衡归并，需要构造最佳归并树。
8.7.1外部排序的基本概念
前面介绍过的排序算法都是在内存中进行的（称为内部排序）。而在许多应用中，经常需要
对大文件进行排序，因为文件中的记录很多，无法将整个文件复制进内存中进行排序。因此，需
要将待排序的记录存储在外存上，排序时再把数据一部分一部分地调入内存进行排序，在排序过
程中需要多次进行内存和外存之间的交换。这种排序算法就称为外部排序。
8.7.2外部排序的方法
文件通常是按块存储在磁盘上的，操作系统也是按块对磁盘上的信息进行读/写的。因为磁盘
读/写的机械动作所需的时间远远超过在内存中进行运算的时间（相比而言可以忽略不计），因此
在外部排序过程中的时间代价主要考虑访问磁盘的次数，即I/O次数。
命题追踪）对大文件排序时使用的排序算法（2016）
外部排序通常采用归并排序算法。它包括两个阶段：①根据内存缓冲区大小，将外存上的文
件分成若干长度为（的子文件，依次读入内存并利用内部排序算法对它们进行排序，并将排序后
得到的有序子文件重新写回外存，称这些有序子文件为归并段或顺串；②对这些归并段进行逐趟
