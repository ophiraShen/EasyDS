第1章绪
论
5
5）输出。一个算法有一个或多个输出，这些输出是与输入有着某种特定关系的量。
通常，设计一个“好”的算法应考虑达到以下目标：
1）正确性。算法应能够正确地解决求解问题。
2）可读性。算法应具有良好的可读性，以帮助人们理解。
3）健壮性。算法能对输入的非法数据做出反应或处理，而不会产生莫名其妙的输出。
4）高效率与低存储量需求。效率是指算法执行的时间，存储量需求是指算法执行过程中所
需要的最大存储空间，这两者都与问题的规模有关。
1.2.2算法效率的度量
命题追踪）（算法题）分析时空复杂度（2010—2013、2015、2016、2018—2021）
算法效率的度量是通过时间复杂度和空间复杂度来描述的。
1．时间复杂度
命题追踪分析算法的时间复杂度（2011—2014、2017、2019、2022）
一个语句的频度是指该语句在算法中被重复执行的次数。算法中所有语句的频度之和记为
T(n)，它是该算法问题规模n的函数，时间复杂度主要分析T(n)的数量级。算法中基本运算（最
深层循环中的语句）的频度与T(n)同数量级，因此通常将算法中基本运算的执行次数的数量级作
为该算法的时间复杂度?。于是，算法的时间复杂度记为
T(n)= O(f(n))
式中，O的含义是T(n)的数量级，其严格的数学定义是：若T(n)和fn)是定义在正整数集合上的
两个函数，则存在正常数 C和no，使得当n≥no时，都满足0≤ T(n)≤Cf(n)。
算法的时间复杂度不仅依赖于问题的规模n，也取决于待输入数据的性质（如输入数据元素
的初始状态）。例如，在数组A[0...n-1]中，查找给定值k的算法大致如下：
(1)i=n-1;
(2）while（i>=0&&(A[i]!=k))
(3)
i--;
(4)returni;
该算法中语句3（基本运算）的频度不仅与问题规模n有关，而且与下列因素有关：
①若A中没有与k相等的元素，则语句3的频度f(n)=n。
②若A的最后一个元素等于k，则语句3的频度f（n)是常数0。
最坏时间复杂度是指在最坏情况下，算法的时间复杂度。
平均时间复杂度是指所有可能输入实例在等概率出现的情况下，算法的期望运行时间。
最好时间复杂度是指在最好情况下，算法的时间复杂度。
一般总是考虑在最坏情况下的时间复杂度，以保证算法的运行时间不会比它更长。
在分析一个程序的时间复杂性时，有以下两条规则：
1) 加法规则: T(n)= T(n) + T2(n)= O(f(n)) + O(g(n)= O(max(f(n), g(n))
2） 乘法规则： T(n)= T(n)xT2(n)= O(f(n))xO(g(n))=O(f(n)xg(n))
例如，设a{}、b{)、c{}三个语句块的时间复杂度分别为O(1)、O(n)、O(n²)，则
①al
(q
c()
//时间复杂度为O(²)，满足加法规则
①取f（n）中随n增长最快的项，将其系数置为1作为时问复杂度的度量。例如，f（n）=an²+bn²+cn的时问复杂度为O（n²)。
