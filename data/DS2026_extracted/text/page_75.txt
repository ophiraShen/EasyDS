第3章栈、队列和数组
63
出栈
入栈
栈顶
as
d4
a3
栈底
图3.1
栈的示意图
栈顶（Top）：线性表允许进行插入和删除操作的那一端。
栈底（Bottom）：固定的，不允许进行插入和删除操作的另一端。
空栈：不含任何元素的空表。
命题追踪》入栈序列和出栈序列之间的关系（2022）
命题追踪特定条件下的出栈序列分析（2010、2011、2013、2018、2020）
假设某个栈S=（a1,α2,a3,a4,a5)，如图3.1所示，则a为栈底元素，as为栈顶元素。栈只能
在栈顶进行插入和删除操作，入栈次序依次为a,a2,a3,a4,a，而出栈次序为as,a4,d3,d2,a。由
此可见，栈的操作特性可以明显地概括为后进先出（Last InFirstOut，LIFO）。
注意
每接触一种新的数据结构，都应从其逻辑结构、存储结构和运算三个方面着手。
2.栈的基本操作
各种辅导书中给出的基本操作的名称不尽相同，但所表达的意思大致是一样的。这里我们以
严蔚敏编写的教材为准给出栈的基本操作，希望读者能熟记下面的基本操作。
·InitStack（&S）：初始化一个空栈S。
·StackEmpty（S）：判断一个栈是否为空，若栈s 为空则返回true，否则返回false。
·Push（&S，x)：入栈，若栈s 未满，则将x加入使之成为新栈顶。
·Pop（&S，&x）：出栈，若栈s 非空，则弹出栈顶元素，并用x返回。
·GetTop（S，&x)：读栈顶元素，但不出栈，若栈s 非空，则用x返回栈顶元素。
·DestroyStack（&S）：销毁栈，并释放栈s占用的存储空间（“&”表示引用调用）。
在解答算法题时，若题干未做出限制，则也可直接使用这些基本的操作函数。
n+1
为卡特兰数（Catalan）公式，可采用数学归纳法证明，有兴趣的读者可以参考组合数学教材。
3.1.2栈的顺序存储结构
栈是一种操作受限的线性表，类似于线性表，它也有对应的两种存储方式。
1.顺序栈的实现
采用顺序存储的栈称为顺序栈，它利用一组地址连续的存储单元存放自栈底到栈顶的数据元
素，同时附设一个指针（top）指示当前栈顶元素的位置。
栈的顺序存储类型可描述为
#define MaxSize 50
//定义栈中元素的最大个数
typedef struct
