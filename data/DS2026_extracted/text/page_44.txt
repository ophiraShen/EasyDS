32
2026年数据结构考研复习指导
后找到待插入位置的前驱，即第i-1个结点，再在其后插入。其操作过程如图2.5所示。
图2.5单链表的插入操作
命题追踪单链表插入操作的过程（2016、2024）
首先查找第i-1个结点，假设第i-1个结点为*p，然后令新结点*s的指针域指向*p的后
继，再令结点*p的指针域指向新插入的结点*s。
bool ListInsert(LinkList &L,int i,ElemType e){
LNode *p=L;
//指针p指向当前扫描到的结点
int j=0;
/记录当前结点的位序，头结点是第0个结点
while（p!=NULL&&j<i-1){
//循环找到第i-1个结点
p=p->next;
j++;
if(p==NULL)
//i值不合法
return false;
LNode *s=(LNode*)malloc(sizeof(LNode));
s->data=e;
s->next=p->next;
//图2.5中操作步骤①
p->next=s;
//图2.5中操作步骤②
return true;
插入时，①和②的顺序不能颠倒，否则，先执行p->next=s后，指向其原后继的指针就不
存在了，再执行s->next=p->next时，相当于执行了s->next=s，显然有误。本算法主要的
时间开销在于查找第i-1个元素，时间复杂度为O（n)。若在指定结点后插入新结点，则时间复杂
度仅为O(1)。需注意的是，当链表不带头结点时，需要判断插入位置i是否为1，若是，则要做
特殊处理，将头指针L指向新的首结点。当链表带头结点时，插入位置i为1时不用做特殊处理。
扩展：对某一结点进行前插操作。
前插操作是指在某结点的前面插入一个新结点，后插操作的定义刚好与之相反。在单链表插
入算法中，通常都采用后插操作。以上面的算法为例，先找到第i-1个结点，即插入结点的前驱，
再对其执行后插操作。由此可知，对结点的前插操作均可转化为后插操作，前提是从单链表的头
结点开始顺序查找到其前驱结点，时间复杂度为O(n)。
此外，可采用另一种方式将其转化为后插操作来实现，设待插入结点为*s，将*s插入到*p
的前面。我们仍然将*s插入到*p的后面，然后将p->data与s->data交换，这样做既满足逻
辑关系，又能使得时间复杂度为O(1)。该方法的主要代码片段如下：
x-dxu-
//修改指针域，不能颠倒
p->next=s;
temp=p->data;
I交换数据域部分
p->data=s->data;
s->data=temp;
6.删除结点操作
删除结点操作是将单链表的第i个结点删除。先检查删除位置的合法性，然后查找表中第i-1
个结点，即被删结点的前驱，再删除第i个结点。其操作过程如图2.6所示。
