第4章串
113
的位置（也是后面手算next数组的依据），主串指针i无须回溯，并从该位置开始继续比较。
而模式串向右滑动位数的计算仅与模式串本身的结构有关，与主串无关。
1.KMP算法的原理
要了解模式串的结构，首先要弄清楚几个概念：前缀、后缀和部分匹配值。前缀是指除最后
个字符外，字符串的所有头部子串；后缀是指除第一个字符外，字符串的所有尾部子中：部分
匹配值则是指字符串的前缀和后缀的最长相等前后缀长度。下面以+ababa+为例进行说明：
·+a+的前缀和后缀都为空集，最长相等前后缀长度为0。
·'ab'的前缀为{a}，后缀为{b}，{a}n{b}=，最长相等前后缀长度为0。
'aba'的前缀为{a，ab}，后缀为{a,ba}，{a，ab}n{a，ba}={a}，最长相等前后缀长
度为1。
'abab'的前缀{a,ab，aba}n后缀{b，ab，bab}={ab}，最长相等前后缀长度为2。
'ababa'的前缀{a，ab，aba，abab}n后缀{a，ba，aba，baba}={a,aba)，公共元素有
两个，最长相等前后缀长度为3。
因此，模式串'ababa'的部分匹配值为00123。
这个部分匹配值有什么作用呢？
回到最初的问题，主串为'ababcabcacbab'，模式串为'abcac'。
式，就得到了部分匹配值（PartialMatch，PM）的表。
编号
S
PM
下面用PM表来进行字符串匹配：
主串
a
b
a
模式串
b
第一趟匹配过程：
发现c与a不匹配，前面的2个字符+ab+是匹配的，查表可知，最后一个匹配字符b对应
的部分匹配值为0，因此按照下面的公式算出模式串需要的右滑位数：
右滑位数=已匹配的字符数－对应的部分匹配值
因为2-0=2，所以将模式串向右滑动2位如下，进行第二趟匹配：
主串
模式串
第二趟匹配过程：
发现c与b不匹配，前面的4个字符！abca'是匹配的，查表可知，最后一个匹配字符a对
应的部分匹配值为1，4-1=3，将模式串向右滑动3位如下，进行第三趟匹配：
主串
模式串
第三趟匹配过程：
模式串全部比较完成，匹配成功。整个匹配过程中，主串始终没有回退，所以KMP算法可
在O(n+m)的时间数量级上完成串的模式匹配操作，大大提高了匹配效率。
