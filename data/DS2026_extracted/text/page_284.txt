272
2026年数据结构考研复习指导
注意，有序线性表的顺序查找和后面的折半查找的思想是不一样的，且有序线性表的顺序查
找中的线性表可以是链式存储结构，而折半查找中的线性表只能是顺序存储结构。
7.2.2折半查找
折半查找也称二分查找，它仅适用于有序的顺序表。
命题追踪分析对比给定查找算法与折半查找的效率（2016）
折半查找的基本思想：①首先将给定值key与表中中间位置的元素比较，若相等，则查找成
功，返回该元素的存储位置：②若不等，则所需查找的元素只能在中间元素以外的前半部分或后
半部分（例如，在查找表升序排列时，若key大于中间元素，则所查找的元素只可能在后半部分），
然后在缩小的范围内继续进行同样的查找。重复上述步骤，直到找到为止，或确定表中没有所需
要查找的元素，则查找不成功，返回查找失败的信息。算法如下：
int Binary_Search(SsTable L,ElemType key) (
int low=0,high=L.TableLen-1,mid;
while(low<=high)(
mid=（low+high)/2;
/取中间位置
if(L.elem[mid]==key)
return mid;
//查找成功则返回所在位置
else if(L.elem[mid]>key)
high=mid-1;
//从前半部分继续查找
else
low=mid+1;
1//从后半部分继续查找
return-1;
//查找失败，返回-1
当折半查找算法选取中间结点时，既可以采用向下取整，又可以采用向上取整。但每次查找
的取整方式必须相同，这部分内容请读者结合本节部分习题来理解。
命题追踪折半查找的查找路径的判断（2015）
例如，已知11个元素的有序表{7,10,13,16,19,29,32,33,37,41,43}，要查找值为11和32的元
素，指针1ow和high分别指向表的下界和上界，mid则指向表的中间位置l（low+high）/2]。
下面来说明查找11的过程（查找32的过程请读者自行分析）：
71013
16
192932
33
41
43
low
↑mid
↑high
第一次查找时，将中间位置元素与key比较。因为11<29，说明待查元素若存在，则必在范围
[low，mid-1]内，令high指向位置mid-1，high=mid-1=5，mid=（1+5）/2=3，第二次查找范
围为[1,5]。
7101316
19293233374143
↑low
↑mid
↑high
第二次查找时，将中间位置元素与key比较。因为11<13，说明待查元素若存在，则必在范围
[low，mid-1]内，令high指向位置mid-1，high=mid-1=2，mid=（1+2）/2=1，第三次查找范
围为[1,2]。
7
101316
19293233374143
low ↑
↑high
mid ↑
第三次查找时，将中间位置元素与key比较。因为11>7，说明待查元素若存在，则必在范围
[mid+1,high]内。令1ow=mid+1=2，mid=（2+2）/2=2，第四次查找范围为[2，2]。
