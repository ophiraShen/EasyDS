第7章查
找
283
bool findkey(int A[][],int n,int k){
int i=0,j=n-1;
while(i<n&&j>=0){
/离开边界时查找结束
if(A[i][j]==k）return true；I/查找成功
else if(A[i][j]>k)j--;
//向左移动，在该行内寻找目标值
else i++;
//向下移动，查找下一个更大的元素
//查找失败
return false;
3）比较次数不超过2n次，时间复杂度为O(n)：空间复杂度为O(1)。
07.【解答】
1）折半查找要求元素有序顺序存储，字符中默认按字典序排序（字典序是一种比较两个字符
串大小的方法，它按字母顺序从左到右逐个比较对应的字符，若某一位可比较出大小，则
不再继续比较后面的字符，如abd<acd、abc<abcd等），对本题来说do<for<
repeat<while。若各个元素的查找概率不同，折半查找的性能不一定优于顺序查找。
采用顺序查找时，元素按其查找概率的降序排列时查找长度最小。
采用顺序存储结构，数据元素按其查找概率降序排列。采用顺序查找方法。
查找成功时的平均查找长度=0.35×1+0.35×2+0.15×3+0.15×4=2.1。
此时，显然查找长度比折半查找的更短。
2）答案1：采用链式存储结构时，只能采用顺序查找，其性能和顺序表一样，类似于上题。
数据元素按其查找概率降序排列，构成单链表。采用顺序查找方法。
查找成功时的平均查找长度=0.35×1+0.35×2+0.15×3+0.15×4=2.1。
答案2：还可以构造成二叉排序树的形式。采用二叉链表的存储结构，构造二叉排序树，
元素的存储方式见下图。采用二叉排序树的查找方法。
for
op
while
或
do
while
repeat
for
二叉排序树1
二叉排序树2
查找成功时的平均查找长度=0.15×1+0.35×2+0.35×2+0.15×3=2.0。
7.3树形查找
7.3.1二叉排序树 (BST)
构造一棵二叉排序树的目的并不是排序，而是提高查找、插入和删除关键字的速度，二叉排
序树这种非线性结构也有利于插入和删除的实现。
1.二叉排序树的定义
命题追踪二叉排序树的应用（2013）
二叉排序树（也称二叉查找树）或者是一棵空树，或者是具有下列特性的二叉树：
1）若左子树非空，则左子树上所有结点的值均小于根结点的值。
2）若右子树非空，则右子树上所有结点的值均大于根结点的值。
