第8章排
373
第三趟分配用最高位子关键字K进行，将所有最高位子关键字（百位）相等的记录分配到
同一个队列，如图8.12(a)所示，第三趟收集后的结果如图8.12(b)所示，至此整个排序结束。
[o]b
[1]b
q[2]
q[3]
[+]b
q[5]
[9]b
q[7]
[8]b
[6]b
008
[09]
269
505
930
063
184
278
589
Y
083
(a）第三趟分配后
008063083109184269278505589930
(b）第三趟收集后
图8.12第三趟链式基数排序操作
基数排序算法的性能分析如下。
空间效率：一趟排序需要的辅助存储空间为r（r个队列：r个队头指针和r个队尾指针），但
以后的排序中会重复使用这些队列，所以基数排序的空间复杂度为O(r)。
命题追踪）元素的移动次数与序列初态无关的排序算法（2015）
时间效率：基数排序需要进行d趟“分配”和”收集”操作。一趟分配需要遍历所有关键字，
度为O（d（n+r))，它与序列的初始状态无关。
稳定性：每一趟分配和收集都是从前往后进行的，不会交换相同关键字的相对位置，因此基
数排序是一种稳定的排序算法。
适用性：基数排序适用于顺序存储和链式存储的线性表。
*8.5.3计数排序
命题追踪（算法题）计数排序思想的应用（2013、2015、2018）
计数排序也是一种不基于比较的排序算法。计数排序的思想是：对每个待排序元素x，统计
小于x的元素个数，利用该信息就可确定x的最终位置。例如，若有8个元素小于x，则x就排
在第9号位置上。当有几个元素相同时，该排序方案还需做一定的优化。
注意
计数排序并不在统考大纲的范围内，但其排序思想在历年真题中多次涉及。
在计数排序算法的实现中，假设输入是一个数组A[n]，序列长度为n，我们还需要两个数
引），而该元素出现的次数存储在该元素作为下标的数组C中。算法如下：
命题追踪计数排序相关的思想和代码的分析（2021）
void CountSort(ElemType A[],ElemType B[],int n,int k)(
int i,c[k];
for（i=0;i<k;i++)
C[i]=0;
1//初始化计数数组
for（i=0;i<n;i++)
//遍历输入数组，统计每个元素出现的次数
C[A[i]]++;
IIC[A[i]]保存的是等于A[i]的元素个数
