第5章树与二叉树
157
D、C、F、E
(a)确定根结点
(b)确定右子树的根结点
(c)确定剩下的子树
19.B
先序遍历是根左右，祖先a先于子孙b访问，即pre(a)〈pre(b)，因此选项A一定成立。后
序遍历是左右根，子孙b先于祖先a访问，即post(b)<post(a)，因此选项B一定不成立。中序遍
历是左根右，左子树中的子孙先于祖先访问，右子树中的子孙后于祖先访问，因此子孙的编号可
能小于祖先的编号，也可能大于祖先的编号，选项C和D都有可能。
20.C
删除一个结点时，需要先递归地删除它的左、右孩子，并释放它们所占的存储空间，然后删
除该结点，并删除它所占的存储空间，这正好和后序遍历的访问顺序相吻合。
21.B
只要交换7中所有分支结点的左右子树，就能得到一棵中序遍历序列为降序序列的树，而这
并不会改变根结点，叶结点也仅仅交换位置，仍是原T中的叶结点，选项C、D错误。交换T中
所有分支结点的左右子树，要么先处理根结点，然后递归地处理左右子树，即先序遍历；要么先
处理左右子树，然后处理根结点，即后序遍历；中序遍历是不适合的。选项A错误，选项B正确。
22.A
线索是前驱结点和后继结点的指针，引入线索的目的是加快对二叉树的遍历。
23.C
二叉树是一种逻辑结构，但线索二叉树是加上线索后的链表结构，即它是二叉树在计算机内
部的一种存储结构，所以是一种物理结构。
24.C
n个结点共有链域指针2n个，其中，除根结点外，每个结点都被一个指针指向。剩余的链域
建立线索，共2n-（n-1）=n+1个线索。
25.C
线索二叉树中用ltag/rtag标识结点的左/右指针域是否为线索，其值为1时，对应指针域
为线索，其值为0时，对应指针域为左/右孩子。
26.D
对左子树为空的二叉树进行先序线索化，根结点的左子树为空并且也没有前驱结点（先遍历
根结点），先序遍历的最后一个元素为叶结点，左、右子树均为空且有前驱无后继结点，所以线
索化后，树中空链域有2个。
27.D
不是每个结点通过线索都可以直接找到它的前驱和后继。在先序线索二叉树中查找一个结点
的先序后继很简单，而查找先序前驱必须知道该结点的双亲结点。同样，在后序线索二叉树中查
找一个结点的后序前驱也很简单，而查找后序后继也必须知道该结点的双亲结点，二叉链表中没
有存放双亲的指针。
28.D
后序线索二叉树不能有效解决求后序后继的问题。如下图所示，结点E的右指针指向右孩子，
