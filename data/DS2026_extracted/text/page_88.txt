76
2026年数据结构考研复习指导
出队列
a),a,a3,a4.as
入队列
队头
队尾
图3.5队列示意图
队头（Front）：允许删除的一端，也称队首。
队尾（Rear）：允许插入的一端。
空队列：不含任何元素的空表。
2.队列常见的基本操作
InitQueue（&Q)：初始化队列，构造一个空队列Q。
QueueEmpty（Q)：判队列空，若队列Q为空返回true，否则返回false。
EnQueue（&Q，x)：入队，若队列Q未满，将×加入，使之成为新的队尾。
DeQueue（&Q，&x）：出队，若队列Q非空，删除队首元素，并用x返回。
GetHead（Q，&x）：读队首元素，若队列Q非空，则将队首元素赋值给x。
需要注意的是，栈和队列是操作受限的线性表，因此不是任何对线性表的操作都可以作为栈
和队列的操作。比如，不可以随便读取栈或队列中间的某个数据。
3.2.2队列的顺序存储结构
1.队列的顺序存储
队列的顺序实现是指分配一块连续的存储单元存放队列中的元素，并附设两个指针：队首指
针front指向队首元素，队尾指针rear指向队尾元素的下一个位置（不同教材对front和rear
的定义可能不同，例如，可以让rear指向队尾元素、front指向队首元素。对于不同的定义，
出入队的操作是不同的，本节后面有一些相关的习题，读者可以结合习题思考）。
队列的顺序存储类型可描述为
#define MaxSize 50
1定义队列中元素的最大个数
typedef struct{
ElemType data[MaxSize];
//用数组存放队列元素
int front,rear;
/队首指针和队尾指针
)SqQueue;
初始时：Q.front=Q.rear=0。
入队操作：队不满时，先送值到队尾元素，再将队尾指针加1。
出队操作：队不空时，先取队首元素值，再将队首指针加1。
图3.6(a)所示为队列的初始状态，有Q.front==Q.rear==0成立，该条件可以作为队列判
空的条件。
cear
front
d
b
front
front
a
rear
(a)空队
(b)5个元素入队
(c）出队1次
(d）出队3次
图3.6队列的操作
但能否用Q.rear==MaxSize作为队列满的条件呢？显然不能，图3.6（d)中，队列中仅有一
