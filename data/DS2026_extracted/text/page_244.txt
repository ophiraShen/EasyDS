232
2026年数据结构考研复习指导
构造最小生成树有多种算法，但大多数算法都利用了最小生成树的下列性质：假设G=(V,E)
是一个带权连通无向图，U是顶点集V的一个非空子集。若(u,v)是一条具有最小权值的边，其
中ueU，veV-U，则必存在一棵包含边(u,v)的最小生成树。
基于该性质的最小生成树算法主要有Prim算法和Kruskal算法，它们都基于贪心算法的策
略。对这两种算法应主要掌握算法的本质含义和基本思想，并能动手模拟算法的实现步骤。
下面介绍一个通用的最小生成树算法：
GENERIC MST(G){
T=NULL;
whileT未形成一棵生成树；
do找到一条最小代价边（u,v)并且加入T后不会产生回路；
T=TU（u,v);
通用算法每次加入一条边以逐渐形成一棵生成树，下面介绍两种实现上述通用算法的途径。
1.Prim算法
Prim（普里姆）算法的执行非常类似于寻找图的最短路径的Diikstra算法（见下一节）。
命题追踪Prim算法构造最小生成树的实例（2015、2017、2018）
Prim算法构造最小生成树的过程如图6.15所示。初始时从图中任取一顶点（如顶点1）加
入树T，此时树中只含有一个顶点，之后选择一个与当前T中顶点集合距离最近的顶点，并将该
顶点和相应的边加入T，每次操作后T中的顶点数和边数都增1。以此类推，直至图中所有的顶
点都并入T，得到的T就是最小生成树。此时T中必然有n-1条边。
图6.15Prim算法构造最小生成树的过程
Prim算法的步骤如下：
假设G={V,E}是连通图，其最小生成树T=(U,E)，Er是最小生成树中边的集合。
初始化：向空树T=(U,E)中添加图G=(V,E)的任意一个顶点uo，使U={uo}，Er=。
循环（重复下列操作直至U=V)：从图G中选择满足{（u,v)ueU,veV-U}且具有最小权值
的边(u,v)，加入树 T，置U=UU{v}，Er=ErU{(u,v)}。
Prim算法的简单实现如下：
void Prim(G,T){
T=O;
/初始化空树
U={w};
//添加任意一个顶点w
