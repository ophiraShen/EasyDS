380
2026年数据结构考研复习指导
03.【解答】
cmpCountSort算法基于计数排序的思想，对序列进行排序。cmpCountSort算法遍历数组
中的元素，count数组记录比对应待排序数组元素下标大的元素个数，例如，count[1]=3的意思
是数组a中有三个元素比a[1]小，即a[1]是第四大元素，a[l]的正确位置应是b[3]。
1）排序结果为b[6]={-10，10，11，19，25，25}。
2）由代码for（i=0;i<n-1;i++）和for（j=i+1;j<n;j++)可知，在循环过程中，每个元
素都与它后面的所有元素比较一次（所有元素都两两比较一次），比较次数之和为
（n-1)+（n-2）+.…·+1，所以总比较次数是n（n-1）/2。
3）不是。需要将程序中的if语句修改如下：
if(a[i]<=a[j]） count[j]++;
else count[i]++;
若不加等号，两个相等的元素比较时，前面元素的count值会加1，则导致原序列中靠
前的元素在排序后的序列中处于靠后的位置。
8.6各种内部排序算法的比较及应用
8.6.1内部排序算法的比较
前面讨论的排序算法很多，对各种排序算法的比较是考研常考的内容。一般基于五个因素进
行对比：时间复杂度、空间复杂度、稳定性、适用性和过程特征。
命题追踪各种排序算法的特点、比较和适用场景（2017、2020、2022）
从时间复杂度看：简单选择排序、直接插入排序和冒泡排序平均情况下的时间复杂度都为
O(n)，而简单选择排序则与序列的初始状态无关。希尔排序作为插入排序的拓展，对较大规模的
数据都可以达到很高的效率，但目前未得出其精确的渐近时间。堆排序利用了一种称为堆的数据
结构，可以在线性时间内完成建堆，且在O(nlog2n)内完成排序过程。快速排序基于分治的思想，
虽然最坏情况下的时间复杂度会达到O(n²)，但快速排序的平均性能可以达到O(nlog2n)，在实际
应用中常常优于其他排序算法。归并排序同样基于分治的思想，但其分割子序列与初始序列的排
列无关，因此它的最好、最坏和平均时间复杂度均为O(mlog2n)。
丛空问复杂度看：简单选择排序、插入排序、冒泡排序、希尔排序和堆排序都仅需借助常数
个辅助空间。快速排序需要借助一个递归工作栈，平均大小为O(log2n)，当然在最坏情况下可能
会增长到O（m)。二路归并排序在合并操作中需要借助较多的辅助空间用于元素复制，大小为O（n)，
虽然有方法能克服这个缺点，但其代价是算法会很复杂而且时间复杂度会增加。
命题追踪排序算法的稳定性判断及改进（2021、2023）
从稳定性看：插入排序、冒泡排序、归并排序和基数排序是稳定的排序算法，而简单选择排
序、快速排序、希尔排序和堆排序都是不稳定的排序算法。平均时间复杂度为O(nlog2n)的稳定排
序算法只有归并排序，对于不稳定的排序算法，只需举出一个不稳定的实例即可。对于排序算法
的稳定性，读者应能从算法本身的原理上去理解，而不应拘泥于死记硬背。
命题追踪更适合采用顺序存储的排序算法（2017）
从适用性看：折半插入排序、希尔排序、快速排序和堆排序适用于顺序存储。直接插入排序、
