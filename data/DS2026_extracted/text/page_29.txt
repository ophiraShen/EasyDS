第2章线性
表
17
最坏情况：删除表头元素（i=1)，需移动除表头元素外的所有元素，时间复杂度为O(n)。
平均情况：假设p;（p,=1/n）是删除第i个位置上结点的概率，则在长度为n的线性表中删
除一个结点时，所需移动结点的平均次数为
1 n(n-1) n-1
p;(n-i)=
-（n-i）：
（n-i)
=1n
n=1
n
2
i=l
因此，顺序表删除算法的平均时间复杂度为O（n)。
可见，顺序表中插入和删除操作的时间主要耗费在移动元素上，而移动元素的个数取决于插
入和删除元素的位置。图2.2所示为一个顺序表在进行插入和删除操作前、后的状态，以及其数
据元素在存储空间中的位置变化和表长变化。在图2.2（a)中，将第4个至第7个元素从后往前依
次后移一个位置，在图2.2（b）中，将第5个至第7个元素从前往后依次前移一个位置。
0
0
6
data
25
3457
0963
data
25345716480963
删除16
data
57
50
data
(a)插入新元素示例
(b）删除表中元素示例
图2.2顺序表的插入和删除
4.按值查找（顺序查找）
在顺序表L中查找第一个元素值等于é的元素，并返回其位序。
int LocateElem(SqList L,ElemType e){
inti;
for（i=0;i<L.length;i++)
if(L.data[i]==e)
returni+1;
//下标为i的元素值等于e，返回其位序i+1
return0;
//退出循环，说明查找失败
最好情况：查找的元素就在表头，仅需比较一次，时间复杂度为0（1)。
最坏情况：查找的元素在表尾（或不存在）时，需要比较n次，时间复杂度为O(n)。
则在长度为n的线性表中查找值为e的元素所需比较的平均次数为
"1
1 n(n+1)
）n+1
=n
n
2
因此，顺序表按值查找算法的平均时间复杂度为O(n)。
顺序表的按序号查找非常简单，即直接根据数组下标访问数组元素，其时间复杂度为O(1)。
2.2.3本节试题精选
一、单项选择题
01.下列叙述中，（）是顺序存储结构的优点。
A.存储密度大
B.插入运算方便
C.删除运算方便
D.方便地运用于各种逻辑结构的存储表示
