132
2026年数据结构考研复习指导
②叶结点只可能在最后两层上出现（相当于在相同高度的满二叉树的最底层、最右边减
③若有度为1的结点，则最多只可能有一个，且该结点只有左孩子而无右孩子（度为1
的分支结点只可能是最后一个分支结点，其结点编号为[n/2」）。
④按层序编号后，一旦出现某结点（如编号i）为叶结点或只有左孩子的情况，则编号
大于i的结点均为叶结点（与结论①和结论③是相通的）。
若n为奇数，则每个分支结点都有左、右孩子：若n为偶数，则编号最大的分支结点
（编号为n/2）只有左孩子，没有右孩子，其余分支结点都有左、右孩子。
当i>1时，结点i的双亲结点的编号为i/2]。
若结点i有左、右孩子，则左孩子编号为2i，右孩子编号为2i+1。
⑧结点i所在层次（深度）为[log2i+1。
5）具有n个（n>0）结点的完全二叉树的高度为「log2（n+1)]或Llog2n」+1。
设高度为h，根据性质3和完全二叉树的定义有
2"-l-1<n≤2-1或者2"-1≤n<2h
得21<n+ 1≤2"，即h-1<log2(n+1)≤h，因为h为正整数，所以h=[log2(n+ 1)]，
或者得h-1≤log2n<h，所以h=Llog2n」+1。
5.2.2二叉树的存储结构
1.顺序存储结构
二叉树的顺序存储是指用一组连续的存储单元依次自上而下、自左至右存储完全二叉树上的
结点元素，即将完全二叉树上编号为i的结点元素存储在一维数组下标为i-1的分量中。
依据二叉树的性质，完全二叉树和满二叉树采用顺序存储比较合适，树中结点的序号可以唯
地反映结点之间的逻辑关系，这样既能最大可能地节省存储空间，又能利用数组元素的下标值
确定结点在二叉树中的位置，以及结点之间的关系。
命题追踪特定条件下二叉树树形及占用存储空间的分析（2020）
但对于一般的二叉树，为了让数组下标能反映二叉树中结点之间的逻辑关系，只能添加一些
并不存在的空结点，让其每个结点与完全二叉树上的结点相对照，再存储到一维数组的相应分量
中。然而，在最坏情况下，一个高度为h且只有h个结点的单支树却需要占据近2"-1个存储单
元。二叉树的顺序存储结构如图5.4所示，其中0表示并不存在的空结点。
123456789
[9 0l0 s 0 + 0 e1
(a)完全二叉树的顺序存储结构
(b)一般二叉树的顺序存储结构
图5.4二叉树的顺序存储结构
注意
建议从数组下标1开始存储树中的结点，保证数组下标和结点编号一致。
