第3章栈、队列和数组
77
个元素，但仍满足该条件。这时入队出现“上溢出”，但这种溢出并不是真正的溢出，在data
数组中依然存在可以存放元素的空位置，所以是一种“假溢出”。
2.循环队列
上面指出了顺序队列“假溢出”的问题，这里引出循环队列的概念。将顺序队列臆造为一个
环状的空间，即把存储队列元素的表从逻辑上视为一个环，称为循环队列。当队首指针Q.front=
MaxSize-1后，再前进一个位置就自动到0，这可以利用除法取模运算（%）来实现。
命题追踪特定条件下循环队列队头/队尾指针的初值（2011）
初始时：Q.front=Q.rear=0。
队首指针进1：Q.front=（Q.front+1）%MaxSize。
队尾指针进1：Q.rear=（Q.rear+1）%MaxSize。
队列长度：（Q.rear+MaxSize-Q.front）MaxSize。
出入队时：指针都按顺时针方向进1（如图3.7所示）。
命题追踪特定条件下循环队列队空/队满的判断条件（2014）
那么，循环队列队空和队满的判断条件是什么呢？显然，队空的条件是Q.front==Q.rear。
若入队元素的速度快于出队元素的速度，则队尾指针很快就会赶上队首指针，如图3.7（d1)所示，
此时可以看出队满时也有Q.front==Q.rear。循环队列出入队示意图如图3.7所示。
Q.front
Q.front
(a）初始空队
(b)a、b、c入队
(c)all队
Q.front
（d1)d、e、f、g入队
(d2)d、e、f入队
（无法判断队满还是队空）
（牺牲个存储单元）
图3.7循环队列出入队示意图
为了区分是队空还是队满的情况，有三种处理方式：
1）牺牲一个单元来区分队空和队满，入队时少用一个队列单元，这是一种较为普遍的做法，
约定以“队首指针在队尾指针的下一位置作为队满的标志”，如图3.7（d2）所示。
队满条件：（Q.rear+1）%MaxSize==Q.front。
队空条件：Q.front==Q.rear。
队列中元素的个数：（Q.rear-Q.front+MaxSize）%MaxSize。
2）类型中增设size数据成员，表示元素个数。若删除成功，则size减1，若插入成功，
