第3章栈、队列和数组
99
由此可知，当扫描到f时，栈中的元素依次是+（-*。
【另解】采用手算方法，得出中缀式a/b+（c*d-e*f）/g对应的后缀式为 ab/cd*ef*-g/+。
中缀表达式转后缀表达式时，操作数都直接输出，因此操作数的顺序是固定的。扫描到时，在
后缀表达式f后面的运算符要么还未入栈，要么还在栈中，需要结合中缀式来判断，f后面依次
出栈的运算符为*-／+，/在中缀表达式f之后，此时还未入栈，因此栈中的运算符（从栈底到栈
顶）为+-*；此外，已入栈的界限符（此时还未消解，因此（也还在栈中，栈中的元素依次是+（-*。
15.A
递归调用函数时，在系统栈中保存的函数信息需满足先进后出的特点，依次调用了
main（），S（1），S（0），所以栈底到栈顶的信息依次是main（），S（1），S（0）。
注意
在递归中，系统为每一层的返回点、局部变量、传入实参等开辟了递归工作栈来存储。
16.C
（n条轨道），且每个队列（轨道）可容纳多个元素（多列列车），为便于区分，队列用字母编号。
分析如下：显然先入队的元素必须小于后入队的元素（否则，若8和4入同一个队列，8在4前
面，则出队时也只能8在4前面），这样8入队列A，4入队列B，2入队列C，5入队列B（按
个新的队列中，无法确保“至少”），3入队列C，9入队列A，这时共占了3个队列，后面还有
元素1，直接再用一个新的队列D，1从队列D出队后，剩下的元素6和7或入队列B，或入队
列C。综上，共占用了4个队列。当然还有其他的入队、出队情况，请读者自已推演，但要确保
17.C
I的反例：计算斐波那契数列迭代实现只需要一个循环即可实现。IⅡI的反例：入栈序列为1,2，
进行 Push,Push,Pop,Pop 操作，出栈次序为2、1；进行 Push,Pop,Push,Pop操作，出栈次
序为1,2。IV，栈是一种受限的线性表，只允许在一端进行操作。ⅡI正确。
18.B
第一次调用：①从S1中弹出2和3；②从S2中弹出+：③执行3+2=5：④将5压入S1中，
第一次调用结束后S1中剩余5、8、5（5在栈顶），S2中剩余*、－（-在栈顶）。第二次调用：①
从S1中弹出5和8：②从S2中弹出-：③执行8-5=3：④将3压入S1中，第二次调用结束后
S1中剩余5、3（3在栈顶），S2中剩余*。第三次调用：①从S1中弹出3和5：②从S2中弹出*；
③执行5*3=15；④将15压入S1中，第三次调用结束后S1中仅剩余15，S2为空。
19.A
根据中缀表达式画出对应的二叉树如右图所示，对该二叉树进行后序遍历
即可得到后缀表达式为xy=ur-*v/+。本题也可采用本书前面描述的手算方法。
二、综合应用题
01.【解答】
括号匹配是栈的一个典型应用，给出这道题是希望读者好好掌握栈的应用。
算法的基本思想是扫描每个字符，遇到花、方、圆的左括号时入栈，遇到花、方、圆的右括号时
检查栈顶元素是否为相应的左括号，若是，出栈，否则配对错误。最后栈若不为空也为错误。
